{
    "default_ollama_model": "gemma3:1b",
    "ollama_dashboard_port": 5000,
    "mat_memory_mb": 4096,
    "guard_mode_folder": "",
    "guard_mode_enabled": false,
    "guard_mode_interval_minutes": 1,
    "saved_prompts": [
        {
            "name": "HPROF Comprehensive Analysis",
            "template": "You are an expert Java performance analyst.\nAnalyze the following diagnostic information from a Java application's heap dump.\n\n**MAT Leak Suspects Report Summary:**\n{mat_summary}\n\n**Thread Dump Details from HPROF:**\n{thread_dump_details}\n\nBased on all the provided data, perform the following two tasks:\n1.  **Generate Tags:** In a single line, provide a comma-separated list of 3-5 tags that categorize the main problem(s). Use tags from this list if applicable: MemoryLeak, HighThreadCount, GC_Overhead, FinalizerAbuse, LargeAllocation, ClassLoaderLeak, DuplicateStrings. The line MUST start with \"TAGS:\".\n2.  **Provide Analysis:** Write a detailed analysis in Markdown format covering the primary memory-related problem(s), a root cause hypothesis, and clear, actionable recommendations.\n\n"
        },
        {
            "name": "Thread Dump (jstack) Analysis",
            "template": "You are an expert Java performance analyst specializing in thread-related issues.\nAnalyze the following Java thread dump (from jstack).\n\n**Full Thread Dump:**\n{thread_dump_details}\n\nBased on the provided thread dump, perform the following two tasks:\n1.  **Generate Tags:** In a single line, provide a comma-separated list of 3-5 tags that categorize the main problem(s). Use tags from this list if applicable: Deadlock, ThreadContention, BlockedThreads, HighThreadCount, SlowRequest, IdleApplication. The line MUST start with \"TAGS:\".\n2.  **Provide Analysis:** Write a detailed analysis in Markdown format covering:\n    - Identification of any deadlocks, with the specific threads and locks involved.\n    - Analysis of any significant thread contention (many threads BLOCKED on the same lock).\n    - A summary of the overall application state (e.g., mostly idle, busy processing, stuck).\n    - Actionable recommendations for resolving any identified issues.\n\nYour response:\n"
        },
        {
            "name": "Wireshark Conversation Analysis",
            "template": "You are an expert network analyst.\nAnalyze the following TCP conversation summary generated by tshark. The columns are typically: Address A, Port A, Address B, Port B, Frames, Bytes, Frames A->B, Bytes A->B, Frames B->A, Bytes B->A, Relative Start, Duration.\n\n**tshark TCP Conversation Summary:**\n{tshark_summary}\n\nBased on the provided data, perform the following two tasks:\n1.  **Generate Tags:** In a single line, provide a comma-separated list of 3-5 tags that categorize the main observations. Use tags from this list if applicable: HighLatency, HighTraffic, ChattyProtocol, ManyConnections, LongLivedConnection, UnencryptedHTTP. The line MUST start with \"TAGS:\".\n2.  **Provide Analysis:** Write a detailed analysis in Markdown format covering:\n    - The top 3 \"chattiest\" conversations by total bytes.\n    - Any conversations with unusually long durations that may indicate performance bottlenecks.\n    - Identification of any unencrypted protocols like HTTP on port 80 or other common cleartext ports.\n    - A summary of the overall network behavior and potential areas for investigation.\n\n"
        },
        {
            "name": "Wireshark Multi-Tool Analysis",
            "template": "You are an expert network analyst.\nAnalyze the following summaries generated by tshark from a packet capture. Each section represents a different analysis task and is separated by '---'.\n\n**tshark Analysis Output:**\n{tshark_summary}\n\nBased on all the provided data, perform the following two tasks:\n1.  **Generate Tags:** In a single line, provide a comma-separated list of 3-5 tags that categorize the main observations. Use tags from this list if applicable: HighLatency, HighTraffic, ChattyProtocol, DNS_Error, TLS_Alert, ManyConnections, LongLivedConnection, UnencryptedHTTP, TCP_Errors. The line MUST start with \"TAGS:\".\n2.  **Provide Analysis:** Write a detailed, holistic analysis in Markdown format. Synthesize findings from all sections to:\n    - Identify the top 3 \"chattiest\" conversations by total bytes or packets from the conversation summaries.\n    - Point out any conversations with unusually long durations or high latency that may indicate performance bottlenecks.\n    - Report any DNS errors or unusual query patterns from the DNS statistics.\n    - Report any TLS/SSL security alerts or handshake failures.\n    - Summarize the overall network behavior and provide clear, actionable recommendations for investigation.\n\nYour response:\n"
        }
    ],
    "default_prompt_name": "HPROF Comprehensive Analysis",
    "last_hprof_dir": "C:/Users/YourUser/Documents",
    "default_mat_report_type_id": "leak_suspects",
    "mat_report_options": [
        {
            "name": "Leak Suspects",
            "id": "leak_suspects",
            "mat_arg": "org.eclipse.mat.api:suspects"
        },
        {
            "name": "Dominator Tree",
            "id": "dominator_tree",
            "mat_arg": "org.eclipse.mat.api:dominator_tree"
        },
        {
            "name": "Top Consumers (Retained Size)",
            "id": "top_consumers",
            "mat_arg": "org.eclipse.mat.api:top_consumers_html"
        },
        {
            "name": "System Overview (Basic Parse + Threads)",
            "id": "system_overview",
            "mat_arg": "org.eclipse.mat.api.parse"
        }
    ],
    "llm_parameters": {
        "temperature": 0.1,
        "num_ctx": 12096,
        "top_k": 40,
        "top_p": 0.9,
        "seed": 0,
        "stop": [],
        "num_predict": 1024
    },
    "llm_params_group_checked": true,
    "wireshark_tasks": {
        "tcp_conv": true,
        "ip_conv": true,
        "dns_stats": true,
        "http_reqs": true,
        "tls_alerts": true,
        "slow_resps": true,
        "proto_hier": true,
        "tcp_errors": true
    }
}